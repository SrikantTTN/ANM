package com.example.srikant.apishitting.user.java_model;

import java.util.Map;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import com.example.srikant.apishitting.user.java_model.LocationDbModel;
import com.example.srikant.apishitting.user.java_model.UserDetails;
import com.example.srikant.apishitting.user.java_model.House;

import com.example.srikant.apishitting.user.java_model.LocationDbModelDao;
import com.example.srikant.apishitting.user.java_model.UserDetailsDao;
import com.example.srikant.apishitting.user.java_model.HouseDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig locationDbModelDaoConfig;
    private final DaoConfig userDetailsDaoConfig;
    private final DaoConfig houseDaoConfig;

    private final LocationDbModelDao locationDbModelDao;
    private final UserDetailsDao userDetailsDao;
    private final HouseDao houseDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        locationDbModelDaoConfig = daoConfigMap.get(LocationDbModelDao.class).clone();
        locationDbModelDaoConfig.initIdentityScope(type);

        userDetailsDaoConfig = daoConfigMap.get(UserDetailsDao.class).clone();
        userDetailsDaoConfig.initIdentityScope(type);

        houseDaoConfig = daoConfigMap.get(HouseDao.class).clone();
        houseDaoConfig.initIdentityScope(type);

        locationDbModelDao = new LocationDbModelDao(locationDbModelDaoConfig, this);
        userDetailsDao = new UserDetailsDao(userDetailsDaoConfig, this);
        houseDao = new HouseDao(houseDaoConfig, this);

        registerDao(LocationDbModel.class, locationDbModelDao);
        registerDao(UserDetails.class, userDetailsDao);
        registerDao(House.class, houseDao);
    }
    
    public void clear() {
        locationDbModelDaoConfig.clearIdentityScope();
        userDetailsDaoConfig.clearIdentityScope();
        houseDaoConfig.clearIdentityScope();
    }

    public LocationDbModelDao getLocationDbModelDao() {
        return locationDbModelDao;
    }

    public UserDetailsDao getUserDetailsDao() {
        return userDetailsDao;
    }

    public HouseDao getHouseDao() {
        return houseDao;
    }

}
